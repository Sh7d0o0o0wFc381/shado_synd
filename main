package main

import (
	"fmt"
	"io"
	"net/http"
	"os"
)

func serveImage(w http.ResponseWriter, r *http.Request) {
	// URL of the important picture
	imageURL := "https://drive.google.com/file/d/14ELozitHnmmpLXVRAWGjcmGx3MD2k1GM/view?usp=drive_link"

	// Fetch the image from the URL
	resp, err := http.Get(https://drive.google.com/file/d/14ELozitHnmmpLXVRAWGjcmGx3MD2k1GM/view?usp=drive_link)
	if err != nil {
		http.Error(w, "Failed to fetch image", http.StatusInternalServerError)
		return
	}
	defer resp.Body.Close()

	// Check if the response status is OK
	if resp.StatusCode != http.StatusOK {
		http.Error(w, "Failed to fetch image - Status: "+resp.Status, http.StatusInternalServerError)
		return
	}

	// Set the appropriate Content-Type header for the image
	w.Header().Set("Content-Type", resp.Header.Get("Content-Type"))

	// Copy the image data to the HTTP response
	_, err = io.Copy(w, resp.Body)
	if err != nil {
		http.Error(w, "Failed to write image data to response", http.StatusInternalServerError)
		return
	}
}

func main() {
	// Create a simple HTTP server
	http.HandleFunc("/image", serveImage)

	// Set the port for the server to listen on
	port := ":8080"

	fmt.Printf("Server listening on port %s\n", port)

	// Start the server
	err := http.ListenAndServe(port, nil)
	if err != nil {
		fmt.Println("Failed to start server:", err)
		os.Exit(1)
	}
}
